Rust extension in python based on template provided by :https://codeburst.io/how-to-use-rust-to-extend-python-360174ee5819


Todo:
1. Get info from views to display in userInfo component 8/9
2. Get rust component working 8/9  - BASIC PROJECRT FUNCTIONALITY DONE.
3. Add additional info
  -Character winRate
  -Stage winrate
  -Matchup winrate (Overall)
  -Matchup winrate (Character specific)
  -Overall MatchUp winrate on stage
  -Character specific MatchUp winrate on stage
  -Playtime for character
  -APM for character
  -APM Overall
  -Anything else I can think of (Bonus)
5. Add way to query overall data between time periods
4. Pretty Up front end
  -Add thing to show that file is loading
5. Add way to skip already uploaded games



x. Clean up and pretty front end
y. Add way to skip already uploaded files/games


misc: Clean up dependencies

Structure: Home and Header are components in App.js,which is then in index.js.



Slippi File Structure:
  - Game.metadata
    - Date
    - Duration
    - Platform
    - Player
      -Name
      -Code
      -Port (Use to match with player info in game.start)
  -Game.start
    - Stage
    - Player
      - Character
      - Color
  - Other data to be calculated
    -Who won(Calculate with last frame of duration)


Game[game_id, date, duration, platform, stage, victorCode]
game_id is unique key, victorCode being netplay code of winner

playerSessionInfo[playerSessionInfoID,character, color, netplayCode, port, game_id]

playerSessionInfoID is unqiueKey, game_id foreign key referencing Game


2-4 player info per game, how to store in database?
Options:
  1. Store playerinfo with unique ID in seperate table, and have playerinfo reference the gameID.
